apply plugin: 'com.jfrog.bintray'

ext.bintrayUsername = project.hasProperty('bintrayUsername') ? bintrayUsername : ''
ext.bintrayKey = project.hasProperty('bintrayKey') ? bintrayKey : ''

/*
   UGLY HACK to workaround gradle-bintray-plugin compatibility with Gradle 5+
   https://github.com/asciidoctor/asciidoctorj/issues/861
   https://github.com/bintray/gradle-bintray-plugin/issues/300
   WARNING: since the Groovy Gradle API is modified, this breaks build isolation when sharing a common Gradle daemon instance
   This works because gradle-bintray-plugin is using Groovy dynamic compilation hence it is affected by Groovy runtime meta-programming
   Tested with: Gradle 5.6.3 / gradle-bintray-plugin 1.8.4
   TODO: remove as soon as bintray/gradle-bintray-plugin#300 is fixed and integrated
*/
Signature.metaClass.getToSignArtifact = { ->
      return (delegate as Signature).source
}

if (project.name == "jbake-dist") {

    /**
     * jbake-dist specific bintray configuration.
     *
     * We just need the distribution packages from the project with signatures if they are present.
     * Notice the repository. It's a generic one. You can configure it with -PbintrayBinaryRepo=whatever
     */
    bintray {
        user = bintrayUsername
        key = bintrayKey

        if (!project.hasProperty('skipSigning')) {
            filesSpec {
                from distZip
                from distTar
                from signArchives.signatureFiles.filter { !it.name.endsWith(".jar.asc") }

                into "."
            }

            _bintrayRecordingCopy.dependsOn signArchives

        } else {
            filesSpec {
                from distZip
                from distTar

                into "."
            }
        }

        dryRun = bintrayDryRun.toBoolean()

        pkg {
            userOrg = bintrayOrg
            repo = bintrayBinaryRepo
            name = applicationName
            desc = project.description
            licenses = ['MIT']
            labels = ['jbake', 'site-generator']
            websiteUrl = project.website
            issueTrackerUrl = project.issues
            vcsUrl = project.vcs
            publicDownloadNumbers = true
        }
    }

} else {

    bintray {
        user = bintrayUsername
        key = bintrayKey
        publications = ['mavenJava']

        if (!project.hasProperty('skipSigning')) {
            filesSpec {
                from("${buildDir}/libs") {
                    include '*.jar.asc'
                }
                from("${buildDir}/publications/mavenJava") {
                    include 'pom-default.xml.asc'
                    rename 'pom-default.xml.asc', "${project.name}-${project.version}.pom.asc"
                }
                into "."
            }
        }

        dryRun = bintrayDryRun.toBoolean()
        pkg {
            userOrg = bintrayOrg
            repo = bintrayRepo
            name = project.name
            desc = project.description
            licenses = ['MIT']
            labels = ['jbake', 'site-generator']
            websiteUrl = project.website
            issueTrackerUrl = project.issues
            vcsUrl = project.vcs
            publicDownloadNumbers = true
        }
    }

}

